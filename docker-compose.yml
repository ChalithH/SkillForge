services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SkillForge;User=sa;Password=${SA_PASSWORD};TrustServerCertificate=true
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - JwtSettings__ExpirationInHours=24
    volumes:
      - ./backend:/app
      - backend-nuget-cache:/root/.nuget/packages
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - skillforge-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_SIGNALR_URL=http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - skillforge-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Express
      - MSSQL_MEMORY_LIMIT_MB=1024
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -C -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 40s
    networks:
      - skillforge-network

volumes:
  sqlserver-data:
  backend-nuget-cache:

networks:
  skillforge-network:
    driver: bridge